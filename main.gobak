package main

import (
    "datastruct/arraylist"
    "datastruct/Myutils"
    "datastruct/Queue"
    "datastruct/StackArray"
    "datastruct/recurse"
    "datastruct/stack"
    "fmt"
    "io/ioutil"
)





//栈模拟递归文件并打印层级
func RecursiveFolderWithLevelStackTest() {
    path := "/Users/mac/code/golangproject/src/crblog.cc"
    files := []string{}                        //数组字符串
    files, _ = recurse.GetALLY(path, files, 1) //抓取所有文件
    for i := 0; i < len(files); i++ {          //打印路径
        fmt.Println(files[i])
    }
}



func main(){

    //数组，迭代器，栈迭代器，递归文件夹，栈递归文件夹
    //ArrayListTest()
    //IteratorTest()
    //ArrayListStackTest()
    //ArrayListStackIteratorTest()
    //RecursiveFolderTest()
    //RecursiveFolderWithStackTest()
    //RecursiveFolderWithLevelTest()
    //RecursiveFolderWithLevelStackTest()
    //QueueTest()

    //选择排序
    //sortUtil.SelectSortTest()
    //冒泡排序
    //sortUtil.BubbleSortTest()
    //插入排序
    //sortUtil.InsertSortTest()
    //堆排序
    //sortUtil.HeapSortTest()
    //快速排序
    //  sortUtil.QuickSortTest()
    //奇偶排序
    //sortUtil.OddEvenTest()

   // searchUtils.BinarySearchTest()
   //searchUtils.CountFileLinesTest()
   // searchUtils.SequentialSearchTest()

   //快速排序 二分查找 用户数据检索
   //searchUtils.QuickBinarySearchTest()
    //自定义异常
    //myexception.MyexceptionTest()

    //searchUtils.SearchQQLine()
    //searchUtils.SearchQQ()
    //searchUtils.AdvanceQuickSortTest()
    //searchUtils.AdvanceQuickSortAndBinarySearchQQTest()
    //计数排序
    //searchUtils.CountNumSortTest()



}

hash值不等的一定不等，
hash值相等的 不一定相等